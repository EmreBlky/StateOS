#include <stm32f4_discovery.h>
#include <os.h>

void proc( unsigned &led, Clock::time_point timePoint )
{
	ThisTask::sleepUntil(timePoint);
	for (;;)
	{
		ThisTask::sleepNext(std::chrono::milliseconds{500});
		led++;
	}
}

int main()
{
	auto led = Led();
	auto grn = GreenLed();
	auto now = Clock::now();

	Task::Create(0, [&]{ proc(led[0], now + std::chrono::milliseconds{  0}); });
	Task::Create(0, [&]{ proc(led[1], now + std::chrono::milliseconds{125}); });
	Task::Create(0, [&]{ proc(led[2], now + std::chrono::milliseconds{250}); });
	Task::Create(0, [&]{ proc(led[3], now + std::chrono::milliseconds{375}); });
	Task::Create(0, [&]{ proc(grn,    now + std::chrono::milliseconds{500}); });

	ThisTask::stop();
}
